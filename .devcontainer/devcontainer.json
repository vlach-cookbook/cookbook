// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/javascript-node-postgres
{
  "name": "Cookbook",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  // See https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/terraform:1": {},
    "ghcr.io/devcontainers/features/sshd:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/desktop-lite:1": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "astro-build.astro-vscode",
        "eamodio.gitlens",
        "EditorConfig.EditorConfig",
        "github.vscode-github-actions",
        "GitHub.vscode-pull-request-github",
        "hashicorp.terraform",
        "ms-azuretools.vscode-docker",
        "prisma.prisma",
        "tamasfe.even-better-toml"
      ]
    }
  },
  "remoteEnv": {
    "DATABASE_URL": "postgresql://prisma:prisma@localhost:5432/cookbook?statement_cache_size=0"
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // This can be used to network with other containers or with the host.
  "forwardPorts": [
    // Default `astro dev` port.
    3000,
    // Postgres port.
    5432,
    // NoVnc port for web browser access.
    6080
  ],
  // See https://containers.dev/implementors/json_reference/#lifecycle-scripts.
  // This makes sure the current packages are always available.
  "updateContentCommand": "cd webserver && pnpm install && pnpm prisma db push",
  // 'postCreateCommand' will run in the background while the user's connecting to the container.
  "postCreateCommand": "cd webserver && pnpm playwright install"
}
