---
import AllCategoriesDatalist from "@components/AllCategoriesDatalist.astro";
import AllIngredientsDatalist from "@components/AllIngredientsDatalist.astro";
import AllUnitsDatalist from "@components/AllUnitsDatalist.astro";
import { EditRecipe } from "@components/EditRecipe";
import Layout from "@layouts/Layout.astro";
import { getLogin } from "@lib/login-cookie";
import { prisma } from "@lib/prisma";

const user = await getLogin(Astro.cookies);

const { username, slug } = Astro.params;

if (!slug || !username) {
  return Astro.redirect(`/r/${username}/${slug}`, 303);
}

// Grab this recipe.
const recipe = await prisma.recipe.findFirst({
  where: { author: { username }, slug },
  include: {
    sources: { orderBy: { type: "asc" } },
    ingredients: { orderBy: { order: "asc" } },
    categories: { orderBy: { name: "asc" } },
  },
});

if (!recipe) {
  return Astro.redirect(`/r/${username}/${slug}`, 303);
}

if (!user) {
  const target = new URL("/login", Astro.url);
  target.searchParams.set("from", Astro.request.url);
  target.searchParams.set(
    "message",
    `Please login to edit the ${recipe.name} recipe.`,
  );
  return Astro.redirect(target.href, 303);
}

if (user.username !== username) {
  return new Response(
    `<meta http-equiv="refresh" content="3;/r/${username}/${slug}">
     <h1>Can't edit someone else's recipe.</h1>`,
    {
      status: 403,
      statusText: "Can't edit someone else's recipe.",
      headers: { "content-type": "text/html" },
    },
  );
}
---

<Layout title={recipe.name} user={user} needLogin>
  <EditRecipe
    recipe={recipe}
    user={user}
    categoriesDatalistId="all-categories"
    unitsDatalistId="all-units"
    ingredientsDatalistId="all-ingredients"
    client:load
  />
  <AllCategoriesDatalist id="all-categories" />
  <AllUnitsDatalist id="all-units" />
  <AllIngredientsDatalist id="all-ingredients" />
</Layout>
