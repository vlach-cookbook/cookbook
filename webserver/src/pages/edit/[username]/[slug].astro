---
import { EditRecipe } from "@components/EditRecipe";
import Layout from "@layouts/Layout.astro";
import { getLogin } from "@lib/login-cookie";
import { prisma } from "@lib/prisma";

const user = await getLogin(Astro.cookies);

const { username, slug } = Astro.params;

if (!user) {
  Astro.redirect(
    `/login?user=${encodeURIComponent(
      String(username)
    )}&from=${encodeURIComponent(Astro.request.url)}`
  );
}

// Grab this recipe.

function noSuchRecipe(): Response {
  return Astro.redirect(`/r/${username}/${slug}`, 303);
}

if (
  !slug ||
  typeof slug === "number" ||
  !username ||
  typeof username === "number"
) {
  return noSuchRecipe();
}

if (user?.username !== username) {
  return new Response(
    `<meta http-equiv="refresh" content="3;/r/${username}/${slug}">
     <h1>Can't edit someone else's recipe.</h1>`,
    {
      status: 403,
      statusText: "Can't edit someone else's recipe.",
      headers: { "content-type": "text/html" },
    }
  );
}

const recipe = await prisma.recipe.findFirst({
  where: { author: { username }, slug },
  include: { ingredients: { orderBy: { order: "asc" } } },
});

if (!recipe) {
  return noSuchRecipe();
}
---

<Layout title={recipe.name} user={user} needLogin>
  <EditRecipe recipe={recipe} user={user} client:load />
</Layout>
