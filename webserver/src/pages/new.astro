---
import AllCategoriesDatalist from "@components/AllCategoriesDatalist.astro";
import AllIngredientsDatalist from "@components/AllIngredientsDatalist.astro";
import AllUnitsDatalist from "@components/AllUnitsDatalist.astro";
import { EditRecipe } from "@components/EditRecipe";
import Layout from "@layouts/Layout.astro";
import { getLogin } from "@lib/login-cookie";
import { prisma } from "@lib/prisma";

const user = await getLogin(Astro.cookies);

if (!user) {
  const target = new URL("/login", Astro.url);
  target.searchParams.set("from", Astro.request.url);
  target.searchParams.set("message", "Please login to add a new recipe.");
  return Astro.redirect(target.href, 303);
}

const draftIds = Astro.url.searchParams
  .getAll("draft")
  .flatMap((d) => d.split(","))
  .map(Number.parseInt)
  .filter((d) => !isNaN(d));
const drafts =
  draftIds.length > 0
    ? await prisma.draftRecipe.findMany({
        where: {
          User: { id: user.id },
          id: { in: draftIds },
        },
      })
    : [];
---

<Layout title="New Recipe" user={user} needLogin omitSearchBox>
  <EditRecipe
    user={user}
    drafts={draftIds.flatMap(
      (id) => drafts.find((draft) => draft.id === id) ?? [],
    )}
    categoriesDatalistId="all-categories"
    unitsDatalistId="all-units"
    ingredientsDatalistId="all-ingredients"
    client:load
  />
  <AllCategoriesDatalist id="all-categories" />
  <AllUnitsDatalist id="all-units" />
  <AllIngredientsDatalist id="all-ingredients" />
</Layout>
